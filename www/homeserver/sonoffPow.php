<?php
include ($_SERVER["DOCUMENT_ROOT"] . "/homeserver/include/all.php");

// URL Variablen von addGenericFeature wieder in Variablen umwandeln
if ($params!="") urlToParams($params);

if ($action=="createNew") QUERY("INSERT into heating (sensor) values('0')");
else if ($action=="delete")
{
	 if ($confirm==1)
	 {
	 	 QUERY("delete from heating where id='$id' limit 1");
	 	 deleteGeneratedDiagram($id);
	 }
	 else showMessage("Soll dieses Thermostat wirklich gelöscht werden?","Thermostat löschen?", $link = "heatingControl.php?action=delete&confirm=1&id=$id", $linkName = "Ja, löschen", $link2 = "heatingControl.php", $link2Name = "Nein, zurück");
}
else if ($action=="addSensor")
{
	QUERY("UPDATE heating set sensor='$featureInstanceId' where id='$id' limit 1");
	deleteGeneratedDiagram($id);
	checkAutoGenerateDiagram($id);
}
else if ($action=="addAktor")
{
	QUERY("UPDATE heating set relay='$featureInstanceId' where id='$id' limit 1");
	deleteGeneratedDiagram($id);
	checkAutoGenerateDiagram($id);
}

else if ($action=="selectDiagram")
{
	 $html = file_get_contents("templates/selectDiagram_design.html");
	 $elementsTag = getTag("%ELEMENTS%",$html);
   $elements="";
   $erg = QUERY("select id,title from graphs order by id");
   while($obj=MYSQLi_FETCH_OBJECT($erg))
   {  
   	  $actTag = $elementsTag;
	    $actTag = str_replace("%DIAGRAM_ID%",$obj->id, $actTag);
	    $actTag = str_replace("%DIAGRAM_TITLE%",$obj->title, $actTag);
	    $elements.=$actTag;
   }
   $html = str_replace("%ELEMENTS%",$elements,$html);
   $html = str_replace("%ID%",$id, $html);
   die($html);
}
else if ($action=="setDiagram")
{
	deleteGeneratedDiagram($id);
	QUERY("UPDATE heating set diagram='$diagram' where id='$id' limit 1");
}
else if($action=="createDiagram")
{
	$erg = QUERY("select sensor, relay,diagram from heating where id='$id' limit 1");
	if ($obj=MYSQLi_FETCH_OBJECT($erg))
	{
		$data = getFeatureInstanceData($obj->sensor);
		$sensorName = $data->featureInstanceName;

		$relayData = getFeatureInstanceData($obj->relay);

    // generierte Diagramme löschen
  	deleteGeneratedDiagram($id);
		
  	QUERY("INSERT into graphs (title,timeMode,timeParam1,timeParam2,width,height,distValue,distType,theme,heightMode) 
	                    values('Thermostat $sensorName','days','7','','','700','','','','fixed')");
	  $graphId = query_insert_id();
    
    QUERY("TRUNCATE graphData");
    
    QUERY("INSERT into graphSignals (graphId, color, title) values('$graphId','FF2D0D','$sensorName')");
    $signalId = query_insert_id();
    QUERY("INSERT into graphSignalEvents (graphSignalsId, featureInstanceId, functionId,fkt) 
                                   values('$signalId','$obj->sensor','94','celsius+centiCelsius/100')"); // 94 ist FunctionId vom Temperatur Statusevent

    if ($diagramType==1 && $obj->relay>0)
    {
    	if ($relayData->featureClassName=="Rollladen")
    	{
 		  	$onId=175;  //175 ist FunctionId vom Rollo evOpen
 		  	$offId=56;  //56 ist FunctionId vom Rollo evClosed
  
        QUERY("INSERT into graphSignals (graphId, color, title, type) values('$graphId','086BFF','Heizungsschaltung','steps')");
        $signalId = query_insert_id();
        QUERY("INSERT into graphSignalEvents (graphSignalsId, featureInstanceId, functionId,fkt) 
                                         values('$signalId','$obj->relay','$onId','22')"); 
        QUERY("INSERT into graphSignalEvents (graphSignalsId, featureInstanceId, functionId,fkt) 
                                         values('$signalId','$obj->relay','$offId','22 - position/25')"); 
    	}
    	else
    	{ 
      	$onId=62;  //62 ist FunctionId vom Schalter evOn
      	$offId=63;  //63 ist FunctionId vom Schalter evOff
  
        QUERY("INSERT into graphSignals (graphId, color, title, type) values('$graphId','086BFF','Heizungsschaltung','steps')");
        $signalId = query_insert_id();
        QUERY("INSERT into graphSignalEvents (graphSignalsId, featureInstanceId, functionId,fkt) 
                                         values('$signalId','$obj->relay','$onId','20')"); 
        QUERY("INSERT into graphSignalEvents (graphSignalsId, featureInstanceId, functionId,fkt) 
                                         values('$signalId','$obj->relay','$offId','19.5')"); 
      }
    }
    
    QUERY("UPDATE heating set diagram='$graphId' where id='$id' limit 1");
    
	  triggerTreeUpdate();
	}
}
else if($action=="setConfig")
{
	$temp1="temp_1_$id";
	$temp1=trim($$temp1);
	$temp1 = str_replace(",",".",$temp1);
	$pos = strpos($temp1,".");
	if ($pos!==FALSE)
	{
		$temp1Fraction = substr($temp1,$pos+1);
		if (strlen($temp1Fraction)==1) $temp1Fraction*=10;
		$temp1 = substr($temp1,0,$pos);
	}
	else $temp1Fraction="0";

	$temp2="temp_2_$id";
	$temp2=trim($$temp2);
	$temp2 = str_replace(",",".",$temp2);
	$pos = strpos($temp2,".");
	if ($pos!==FALSE)
	{
		$temp2Fraction = substr($temp2,$pos+1);
		if (strlen($temp2Fraction)==1) $temp2Fraction*=10;
		$temp2 = substr($temp2,0,$pos);
	}
	else $temp2Fraction="0";
	
	$interval = "interval_$id";
	$interval = $$interval;
	$parts = explode("-",$interval);
	$minReportTime = $parts[0];
	$reportTimeBase = $parts[1];
	
	$maxReportTime = 2*$minReportTime;
	if ($maxReportTime>255) $maxReportTime=255;

  $upperTemp = $temp2*100 + $temp2Fraction;
  $lowerTemp = $temp1*100 + $temp1Fraction;
  $hysterese = (int)(($upperTemp - $lowerTemp) / 100);
  if ($hysterese>255) $hysterese=255;
	
	//echo "ID = $id Temp1 = $temp1 temp1Fraction = $temp1Fraction Temp2 = $temp2 temp2Fraction = $temp2Fraction Interval = $interval minReportTime = $minReportTime reportTimeBase = $reportTimeBase maxReportTime = $maxReportTime hysterese = $hysterese<br>";
	
	$erg = QUERY("select heating.sensor from heating where id='$id' limit 1");
	if ($row = MYSQLi_FETCH_ROW($erg))
	{
		 $data = getFeatureInstanceData($row[0]);
		 $objectId = $data->objectId;
		 
		 $callArray = array();
		 $callArray["lowerThreshold"]=$temp1;
		 $callArray["lowerThresholdFraction"]=$temp1Fraction;
		 $callArray["upperThreshold"]=$temp2;
		 $callArray["upperThresholdFraction"]=$temp2Fraction;
		 $callArray["reportTimeBase"]=$reportTimeBase;
		 $callArray["minReportTime"]=$minReportTime;
		 $callArray["maxReportTime"]=$maxReportTime;
		 $callArray["hysteresis"]=$hysterese;
		 
 	   callObjectMethodByName($objectId, "setConfiguration", $callArray);
	   sleepMs(200);
	   callObjectMethodByName($objectId, "getConfiguration");
	   sleepMs(2000);
	   $debug="<b>Einstellung wurde gespeichert</b>";
	}
	else $debug="Fehler: ungültige ID";
}


$html = file_get_contents("templates/sonoffPow_design.html");

// Sekunden =  Sekunden minReportTime * 1s baseTime
$namesDauer = "deaktiviert";
$valsDauer = "0-0";
for($i = 10; $i < 60; $i+=10)
{
  $namesDauer .= "," . $i . " Sek";
  $valsDauer .= "," . $i."-1";
}

// Minuten =  Minuten*2 minReportTime * 30s baseTime
for($i = 1; $i <= 10; $i++)
{
  $namesDauer .= "," . $i . " Min";
  $valsDauer .= "," . ($i * 2)."-30";
}

// 10er Minuten = Minuten minReportTime * 60s baseTime
for($i = 20; $i <= 50; $i+=10)
{
  $namesDauer .= "," . $i . " Min";
  $valsDauer .= "," .$i."-60";
}

// Stunden = Stunden * 60 minReportTime * 60s baseTime
for($i = 1; $i <= 4; $i++)
{
  $namesDauer .= "," . $i . " Std";
  $valsDauer .= "," . ($i * 60)."-60";
}

$elementsTag = getTag("%ELEMENTS%",$html);
$elements="";
//$foundInavtive=0;
$generated=0;
//$erg = QUERY("select ");
/*while($obj=MYSQLi_FETCH_OBJECT($erg))
{
	 $actTag = $elementsTag;
	 $actTag = str_replace("%ID%",$obj->id, $actTag);
	 
	 if ($obj->sensor==0)
	 {
	 	 $mySensor="eintragen";
	 	 removeTag("%OPT_SENSOR%",$actTag);
	 }
	 else
	 {
	 	  $data = getFeatureInstanceData($obj->sensor);
	 	  $mySensor = $data->roomName." > ".$data->featureInstanceName;
	 	  chooseTag("%OPT_SENSOR%",$actTag);

    	$minReportTime=2;
     	$reportTimeBase=60;
	 	  
	 	  $erg2 = QUERY("select functionData from lastReceived where senderObj='".$data->objectId."' and function='Configuration' order by id desc limit 1");
      if ($row2=MYSQLi_FETCH_ROW($erg2))
      {
   	    $functionData = unserialize($row2[0]);
      	$paramData = $functionData->paramData;
   	    foreach ($paramData as $object)
   	    {
   	    	$act=$object->name;
     	 	  $$act = $object->dataValue;
     	 	}
     	}
     	
     	if ($lowerThresholdFraction<10) $lowerThresholdFraction="0".$lowerThresholdFraction;
     	if ($upperThresholdFraction<10) $upperThresholdFraction="0".$upperThresholdFraction;
     	
     	$actTag = str_replace("%TEMP_1%",$lowerThreshold.".".$lowerThresholdFraction, $actTag);
     	$actTag = str_replace("%TEMP_2%",$upperThreshold.".".$upperThresholdFraction, $actTag);
	  	$actTag = str_replace("%INTERVAL_OPTIONS%",getSelect($minReportTime."-".$reportTimeBase, $valsDauer, $namesDauer), $actTag);

	 }
	 $actTag = str_replace("%TEMP%",$mySensor, $actTag);
	 
	 if ($obj->relay==0) $myAktor="eintragen";
	 else
	 {
	 	  $relayData = getFeatureInstanceData($obj->relay);
	 	  $myAktor = $data->roomName." > ".$relayData->featureInstanceName;
	 }
	 $actTag = str_replace("%SWITCH%",$myAktor, $actTag);
	 
	 if ($obj->diagram==0 || $obj->graphTitle==null)
	 {
	 	 if ($obj->sensor==0) $mySensor="</a>Zuerst Sensor auswählen";
	 	 else $mySensor="eintragen";
	 }
	 else $mySensor=$obj->graphTitle;
	 
	 //$actInactive=0;
	 $status="<img src='/homeserver/img/offline2.gif' title='Regeln für Thermostat noch nicht generiert'>";
	 if ($obj->sensor>0 && $obj->relay>0)
	 {
	 	  //$actInactive=1;
	 	  $erg2= QUERY("select groups.id as groupId,
	 	                       basicRules.id as ruleId,
	 	                       basicrulesignals.id as signalId
	 	                      
	 	                from groups 
	 	                join groupFeatures on (groupFeatures.groupId = groups.id)
	 	                join basicRules on (basicRules.groupId = groups.id)
	 	                join basicrulesignals on (basicrulesignals.ruleId=basicRules.id)
	 	                where groupFeatures.featureInstanceId='$obj->relay' and groups.single=1
	 	                      and extras='Heizungssteuerung'
	 	                      and basicrulesignals.featureInstanceId='$obj->sensor'
	 	                ");
	 	  if ($obj2=MYSQLi_FETCH_OBJECT($erg2)) $status="<img src='/homeserver/img/online2.gif' title='Regeln sind generiert'>";
	 	  else //if ($action=="generateRules")
	 	  {
	 	  	  $erg2= QUERY("select groups.id as groupId 
	 	  	                       from groups 
	 	  	          	           join groupFeatures on (groupFeatures.groupId = groups.id)
           	 	                 where groupFeatures.featureInstanceId='$obj->relay' and groups.single=1
     	                 ");
     	    if ($obj2=MYSQLi_FETCH_OBJECT($erg2))
     	    {
     	    	 $fktValue="0";
     	    	 if ($relayData->featureClassName=="Rollladen") $fktValue="true";
     	    	 
     	    	 QUERY("INSERT into basicRules (groupId, fkt1,fkt2,startDay,startHour,startMinute,endDay,endHour,endMinute,extras,active)
     	    	                         values('$obj2->groupId','$fktValue','true','7','31','255','7','31','255','Heizungssteuerung','1')");
     	    	 $ruleId = QUERY_INSERT_ID();

     	    	 QUERY("INSERT into basicRuleSignals (ruleId, featureInstanceId) values ('$ruleId','$obj->sensor')");
     	    	 $signalId = QUERY_INSERT_ID();
     	    	 
     	    	 $status="<img src='/homeserver/img/online2.gif' title='Regeln sind generiert'>";
	 	  	     //$actInactive=0;
	 	  	     $debug.="Regel für Thermostat $mySensor wurde generiert <br>";
	 	  	     $generated=1;
     	    }
     	    else $debug.="<font color=#bb0000><b>Fehler: Gruppe für Sensor $mySensor konnte nicht gefunden werden </font><br>";
	 	  }
	 }
	 
	 //if ($actInactive==1) $foundInavtive=1;
	 
	 $actTag = str_replace("%STATUS%",$status, $actTag);
	 $actTag = str_replace("%DIAGRAM%",$mySensor, $actTag);
	 $actTag = str_replace("%ROOM%",$obj->roomName, $actTag);
	 
	 $actTag = str_replace("%SENSOR_PARAMS%",paramsToUrl("action=addSensor&id=$obj->id"), $actTag);
	 $actTag = str_replace("%AKTOR_PARAMS%",paramsToUrl("action=addAktor&id=$obj->id"), $actTag);
	 
	 $elements.=$actTag;
}
*/


$html = str_replace("%ELEMENTS%",$elements,$html);

if ($debut!="") $debug="<br>".$debug."<br>";

$html = str_replace("%DEBUG%",$debug,$html);

die($html);


function getTimeOptionsHour($myValue)
{
	$myOptions = "<option value='31'>Immer";
	$myOptions .= "<option value='25'>Tagsüber";
 	$myOptions .= "<option value='26'>Nachts";

  for($hour = 0; $hour < 24; $hour++)
  {
    $myHour = $hour;
    if (strlen($myHour) == 1) $myHour = "0" . $myHour;
    $myOptions .= "<option value='$hour'>$myHour Uhr";
  }
      
  if ($myValue == "31") $myOptions = str_replace("value='31'","value='31' selected",$myOptions);
  else if ($myValue == "25") $myOptions = str_replace("value='25'","value='25' selected",$myOptions);
  else if ($myValue == "26") $myOptions = str_replace("value='26'","value='26' selected",$myOptions);

  $myOptions = str_replace("value='$myValue'","value='$myValue' selected",$myOptions);
  	
	return $myOptions;
}

function deleteGeneratedDiagram($heatingId)
{
	$erg = QUERY("select diagram from heating where id='$heatingId' limit 1");
	if ($obj=MYSQLi_FETCH_OBJECT($erg))
	{
		if ($obj->diagram>0)
		{
  	  QUERY("delete from graphs where id='$obj->diagram' and timeMode='days' and timeParam1='7' and timeParam2='' and width='' and height='700' and distValue='' and distType='' and theme='' and heightMode='fixed'");
  	  QUERY("update heating set diagram='0' where id='$heatingId' limit 1");
  	  triggerTreeUpdate();
  	}
  }
}

function checkAutoGenerateDiagram($heatingId)
{
	$erg = QUERY("select diagram,sensor,relay from heating where id='$heatingId' limit 1");
	if ($obj=MYSQLi_FETCH_OBJECT($erg))
	{
		if ($obj->diagram==0 && $obj->sensor>0 && $obj->relay>0)
		{
			  header("Location: heatingControl.php?action=createDiagram&id=$heatingId&diagramType=1");
			  exit;
		}
  }
}
?>  